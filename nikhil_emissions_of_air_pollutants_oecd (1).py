# -*- coding: utf-8 -*-
"""Nikhil emissions-of-air-pollutants-oecd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Olp9eQhMLLon3XZ6tPBUbaIQCMjPlFb1

#### Importing required libraries
"""

from google.colab import files
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

uploaded = files.upload()

"""#### Importing the dataset as Pandas dataframe"""

countries_data = pd.read_csv("Nikhil emissions-of-air-pollutants-oecd.csv")

countries_data.head()

"""#### Dataset information"""

countries_data.info()

"""#### Checking for NULL values"""

countries_data.isna().sum()

"""#### Column names"""

countries_data.columns

"""#### Renaming the columns"""

countries_data = countries_data.rename(columns={
    'Entity': 'Country',
    'Code': 'Country_Code',
    'Year': 'Year',
    'Carbon Monoxide (Index)': 'CO_Index',
    'NOx (Index)': 'NOx_Index',
    'PM₁₀ (Index)': 'PM10_Index',
    'PM₂.₅ (Index)': 'PM25_Index',
    'SO₂ (Index)': 'SO2_Index'
})

countries_data.head()

"""#### Seperating the data for the Countries from the European total and the OECD total"""

europe_data = countries_data[countries_data['Country'] == 'Europe']
oecd_total_data = countries_data[countries_data['Country'] == 'OECD - Total']

countries_data = countries_data[countries_data['Country'] != 'Europe']
countries_data = countries_data[countries_data['Country'] != 'OECD - Total']

"""#### Dropping the Country Code column for all the dataframes"""

europe_data = europe_data.drop(columns=['Country_Code'])
oecd_total_data = oecd_total_data.drop(columns=['Country_Code'])
countries_data = countries_data.drop(columns=['Country_Code'])

"""#### There are NULL values in the PM10_Index and PM25_Index columns
#### First checking for countries with no data for PM10_Index and PM25_Index in  Countries dataframe
"""

# Grouping the data by country
grouped_data = countries_data.groupby('Country')

# Checking if the count of non-null values for PM10_Index and PM25_Index for each country is zero for all years
countries_with_no_data = []
for country, group in grouped_data:
    if group['PM10_Index'].notna().sum() == 0 and group['PM25_Index'].notna().sum() == 0:
        countries_with_no_data.append(country)

print("Countries with no data for PM10_Index and PM25_Index:")
print(countries_with_no_data)

"""#### Mitigating the NULL values present in the PM10_Index and the PM25_Index columns"""

# Replace NaN values with 0 for PM10_Index and PM25_Index in countries with no data
for country in countries_with_no_data:
    countries_data.loc[countries_data['Country'] == country, ['PM10_Index', 'PM25_Index']] = countries_data.loc[countries_data['Country'] == country, ['PM10_Index', 'PM25_Index']].fillna(0)

# Perform imputation for other countries
countries_data['PM10_Index'] = countries_data.groupby('Country')['PM10_Index'].transform(lambda x: x.fillna(x.mean()))
countries_data['PM25_Index'] = countries_data.groupby('Country')['PM25_Index'].transform(lambda x: x.fillna(x.mean()))

"""#### Replacing any NULL values left"""

countries_data['PM25_Index'].fillna(0, inplace=True)

"""#### In the Europe and OECD total dataframes there are no values for PM10_Index and PM25_Index columns so dropping them"""

europe_data.drop(columns=['PM10_Index', 'PM25_Index'], inplace=True)
oecd_total_data.drop(columns=['PM10_Index', 'PM25_Index'], inplace=True)

"""#### Dataframes after preprocessing"""

europe_data

oecd_total_data

countries_data

"""#### Exploratory Data Analysis

##### Pollutant Indices Over Time for Different Countries
"""

countries = countries_data['Country'].unique()

for country in countries:
    country_data = countries_data[countries_data['Country'] == country]

    plt.figure(figsize=(10, 6))
    plt.plot(country_data['Year'], country_data['CO_Index'], marker='o', label='CO_Index')
    plt.plot(country_data['Year'], country_data['NOx_Index'], marker='o', label='NOx_Index')
    plt.plot(country_data['Year'], country_data['PM10_Index'], marker='o', label='PM10_Index')
    plt.plot(country_data['Year'], country_data['PM25_Index'], marker='o', label='PM25_Index')
    plt.plot(country_data['Year'], country_data['SO2_Index'], marker='o', label='SO2_Index')

    plt.title(f'Pollutant Indices Over Time for {country}')
    plt.xlabel('Year')
    plt.ylabel('Index Value')
    plt.legend()
    plt.grid(True)
    plt.xticks(rotation=45)

    plt.tight_layout()
    plt.show()

"""##### Pollutant Indices Over Time for Europe"""

plt.figure(figsize=(10, 6))
plt.plot(europe_data['Year'], europe_data['CO_Index'], marker='o', label='CO_Index')
plt.plot(europe_data['Year'], europe_data['NOx_Index'], marker='o', label='NOx_Index')
plt.plot(europe_data['Year'], europe_data['SO2_Index'], marker='o', label='SO2_Index')

plt.xlabel('Year')
plt.ylabel('Index Value')
plt.legend()
plt.grid(True)
plt.xticks(rotation=45)

plt.tight_layout()
plt.show()

"""##### Pollutant Indices Over Time for OECD Countries"""

plt.figure(figsize=(10, 6))
plt.plot(oecd_total_data['Year'], oecd_total_data['CO_Index'], marker='o', label='CO_Index')
plt.plot(oecd_total_data['Year'], oecd_total_data['NOx_Index'], marker='o', label='NOx_Index')
plt.plot(oecd_total_data['Year'], oecd_total_data['SO2_Index'], marker='o', label='SO2_Index')

plt.xlabel('Year')
plt.ylabel('Index Value')
plt.legend()
plt.grid(True)
plt.xticks(rotation=45)

plt.tight_layout()
plt.show()

air_pollutants_emissions_oecd = countries_data

air_pollutants_emissions_oecd.to_csv('air_pollutants_emissions_oecd.csv', index=False)