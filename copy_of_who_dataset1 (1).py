# -*- coding: utf-8 -*-
"""Copy of Who Dataset1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eUdGTlRMFuwXXaCWipKM9-E2ruTNw7wZ
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

# Specify sheet name
file_name = 'who_aap_2021_v9_11august2022.xlsx'
sheet_name = 'AAP_2022_city_v9'  # Replace 'Sheet1' with the actual sheet name

# Read the Excel file into a pandas DataFrame
df = pd.read_excel(file_name, sheet_name=sheet_name)

# Check if DataFrame is loaded correctly
print(df.head())

import pandas as pd

# Read the Excel file into a pandas DataFrame with the specified sheet name
file_name = 'who_aap_2021_v9_11august2022.xlsx'
sheet_name = 'AAP_2022_city_v9'
df = pd.read_excel(file_name, sheet_name=sheet_name)

# Select columns 6 to 11
numeric_columns = df.iloc[:, 6:11]

# Convert columns to numeric type
numeric_columns = numeric_columns.apply(pd.to_numeric, errors='coerce')

# Calculate mean, median, mode, and standard deviation for each column
statistics = {
    'Column': [],
    'Mean': [],
    'Median': [],
    'Mode': [],
    'Standard Deviation': []
}

for col in numeric_columns.columns:
    col_data = numeric_columns[col].dropna()  # Drop missing values
    statistics['Column'].append(col)
    statistics['Mean'].append(col_data.mean())
    statistics['Median'].append(col_data.median())
    statistics['Mode'].append(col_data.mode().iloc[0] if not col_data.empty else pd.Series([]))
    statistics['Standard Deviation'].append(col_data.std())

# Create a DataFrame for the statistics
statistics_df = pd.DataFrame(statistics)

# Print the statistics
print(statistics_df)

import pandas as pd
import matplotlib.pyplot as plt

# Specify the file name and sheet name
file_name = 'who_aap_2021_v9_11august2022.xlsx'
sheet_name = 'AAP_2022_city_v9'

# Read the Excel file into a pandas DataFrame with the specified sheet name
df = pd.read_excel(file_name, sheet_name=sheet_name)

# Select the columns "NO2 (μg/m3)" and "Measurement year"
x_column = "NO2 (μg/m3)"
y_column = "Measurement Year"

# Create the scatter plot
plt.figure(figsize=(10, 6))  # Adjust the figure size as needed
plt.scatter(df[x_column], df[y_column], alpha=0.5)  # Adjust alpha for transparency
plt.title('Scatter Plot of NO2 (μg/m3) vs Measurement Year')
plt.xlabel('NO2 (μg/m3)')
plt.ylabel('Measurement Year')
plt.grid(True)
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Read the Excel file into a pandas DataFrame
file_name = 'who_aap_2021_v9_11august2022.xlsx'
sheet_name = 'AAP_2022_city_v9'
df = pd.read_excel(file_name, sheet_name=sheet_name)

# Specify the columns for the x-axis
x_columns = ["PM10 (μg/m3)", "PM2.5 (μg/m3)"]

# Create the bar chart
plt.figure(figsize=(10, 6))  # Adjust the figure size as needed
for i, column in enumerate(x_columns):
    plt.bar(i, df[column].mean(), label=column)

plt.title('Average PM10 vs PM2.5 Concentrations')
plt.xlabel('Pollutants')
plt.ylabel('Average Concentration (μg/m3)')
plt.xticks(range(len(x_columns)), x_columns)
plt.legend()
plt.grid(True)
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Read the Excel file into a pandas DataFrame
file_name = 'who_aap_2021_v9_11august2022.xlsx'
sheet_name = 'AAP_2022_city_v9'
df = pd.read_excel(file_name, sheet_name=sheet_name)

# Pivot the DataFrame to have Measurement year as rows and PM2.5 and PM10 temporal coverage as columns
heatmap_df = df.pivot_table(index='Measurement Year', values=['PM25 temporal coverage (%)', 'PM10 temporal coverage (%)'])

# Create the heatmap
plt.figure(figsize=(10, 6))  # Adjust the figure size as needed
sns.heatmap(heatmap_df, cmap='viridis', annot=True, fmt=".1f")
plt.title('Heatmap of PM2.5 and PM10 Temporal Coverage over Measurement Year')
plt.xlabel('Pollutant')
plt.ylabel('Measurement Year')
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Read the Excel file into a pandas DataFrame
file_name = 'who_aap_2021_v9_11august2022.xlsx'
sheet_name = 'AAP_2022_city_v9'
df = pd.read_excel(file_name, sheet_name=sheet_name)

# Select the column for the y-axis
y_column = "NO2 temporal coverage (%)"

# Create the histogram
plt.figure(figsize=(10, 6))  # Adjust the figure size as needed
plt.hist(df[y_column], bins=20, edgecolor='black')
plt.title('Histogram of NO2 Temporal Coverage')
plt.xlabel('NO2 Temporal Coverage (%)')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

import pandas as pd

# Read the Excel file into a pandas DataFrame
file_name = 'who_aap_2021_v9_11august2022.xlsx'
sheet_name = 'AAP_2022_city_v9'
df = pd.read_excel(file_name, sheet_name=sheet_name)

# Display the first few rows of the DataFrame to understand its structure
print("Original DataFrame:")
print(df.head())

# Define columns for imputation and their respective mean values
columns_to_impute = ['PM10 (μg/m3)', 'NO2 (μg/m3)', 'PM25 temporal coverage (%)', 'PM10 temporal coverage (%)', 'NO2 temporal coverage (%)']
mean_values = [30.533252, 20.619336, 90.794096, 90.583500, 93.696804]

# Impute missing values with the mean
for column, mean_value in zip(columns_to_impute, mean_values):
    df[column].fillna(mean_value, inplace=True)

# Convert 'Measurement year' to datetime data type
df['Measurement Year'] = pd.to_datetime(df['Measurement Year'])

# Remove irrelevant columns
irrelevant_columns = ['Status', 'Number and type of monitoring stations','Version of the database']
df.drop(columns=irrelevant_columns, inplace=True)

# Display the first few rows of the DataFrame after preprocessing
print("DataFrame after preprocessing:")
print(df.head())